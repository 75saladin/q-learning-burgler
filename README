11/21/2016:
- Submission for part 1 of the assignment. Implements the environment of a 
  Q-Learning Burgler as described in assignment.pdf.

12/07/2016:
- Submission for part 2 of the assignment. I completed variation 2. 
  Note: My output file
  was manually constructed by putting together the output files from all 7 
  parameter combinations. I wasn't sure how you wanted us to go about making
  it, so I didn't write any code that strings together multiple outputs into 
  one file automatically. Apologies if that's what you wanted.

Usage:
Compile: javac QLearn.java
Run: javac QLearn <input> <alpha> <gamma> <epochs>

<input> ::= The relative path of the input file
<alpha> ::= The learning rate for the Q Learning algorithm, as a 0-1 double
<gamma> ::= The discount rate for the Q Learning algorithm, as a 0-1 double
<epochs> ::= The number of moves to train the burgler for.

Input file format: (All lines are plain space-separated integer values)
Line 1: Width of board, number of trolls, number of ponies
Line 2: escape location as two integers representing an x,y pair (bottom left 
        is 0 0)
Line 3: A series of x y pairs to define pony locations
Line 4: A series of x y pairs to define obstruction locations (if none, this 
        line is a single pair: -1 -1)
Line 5: A series of x y pairs to define troll locations

Example input file can be found in input.txt